server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

  data:
    redis:
      host: localhost
      port: 6379

  config:
    import: optional:configserver:http://localhost:8888

  cloud:
    config:
      name: api-service

    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
          ## user-service
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/authenticate
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/multi
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/auth/accessToken
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/logout
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/refresh-auth
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/v3/api-docs
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        ## community-service
        - id: community-service
          uri: lb://COMMUNITY-SERVICE
          predicates:
            - Path=/community-service/communities
            - Method=POST,PUT,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/community-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: community-service
          uri: lb://COMMUNITY-SERVICE
          predicates:
            - Path=/community-service/topics
            - Method=POST,PUT,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/community-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: community-service
          uri: lb://COMMUNITY-SERVICE
          predicates:
            - Path=/community-service/v3/api-docs
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/community-service/(?<segment>.*), /$\{segment}
        - id: community-service
          uri: lb://COMMUNITY-SERVICE
          predicates:
            - Path=/community-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/community-service/(?<segment>.*), /$\{segment}




        ## chat-service
        - id: chat-service
          uri: lb://CHAT-SERVICE
          predicates:
            - Path=/chat-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/chat-service/(?<segment>.*), /$\{segment}

        - id: chat-service
          uri: lb:ws://CHAT-SERVICE
          predicates:
            - Path=/chat-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/chat-service/(?<segment>.*), /$\{segment}

        ## post-service
        - id: post-service
          uri: lb://POST-SERVICE
          predicates:
            - Path=/post-service/**
            - Method=POST,PUT,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
            - RewritePath=/post-service/(?<segment>.*), /$\{segment}

        - id: post-service
          uri: lb://POST-SERVICE
          predicates:
            - Path=/post-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/post-service/(?<segment>.*), /$\{segment}

springdoc:
  swagger-ui:
    urls[0]:
      name: 유저 서비스
      url: user-service/v3/api-docs
    urls[1]:
      name: 방 서비스
      url: room-service/v3/api-docs
    urls[2]:
      name: 게시글 서비스
      url: post-service/v3/api-docs

    use-root-path: true

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, beans, busrefresh

logging:
  level:
    io.netty: DEBUG
    reactor.netty: DEBUG

