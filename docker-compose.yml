version: "3"

services:
  discovery-service:
    image: sanghoon/discovery-service:1.0
    container_name: discovery-service
    ports:
      - 8761:8761

  rabbitmq:
    depends_on:
      - discovery-service
    image: rabbitmq:3.13.3-management
    container_name: rabbitmq
    hostname: rabbitmq-dev
    environment:
      - RABBITMQ_ERLANG_COOKIE=rabbitmqCookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=1234
    ports:
      - 15672:15672
      - 5672:5672

  apigateway-service:
    depends_on:
      - config-service
    image: sanghoon/apigateway-service:1.0
    container_name: apitgateway-service
    ports:
      - 8000:8000
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq

  postgresql:
    depends_on:
      - discovery-service
    image: postgres:17
    container_name: postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=users
  
  redis:
    depends_on:
      - discovery-service
    image: redis:7.4
    container_name: redis
    ports:
      - 6379:6379

  config-service:
    depends_on:
      - rabbitmq
    container_name: config-service
    image: sanghoon/config-service:1.0
    ports:
      - "8888:8888"
    healthcheck:
      test: curl -f http://localhost:8888/actuator/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 120

  user-service:
    depends_on:
      postgresql:
        condition: service_started
      redis:
        condition: service_started
      config-service:
        condition: service_healthy

    image: sanghoon/user-service:1.0
    container_name: user-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/users
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_REDIS_HOST=redis

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234

  room-service:
    depends_on:
      mongodb:
        condition: service_started
      config-service:
        condition: service_healthy
    image: sanghoon/room-service:1.0
    container_name: room-service

  chat-service:
    depends_on:
      mongodb:
        condition: service_started
      config-service:
        condition: service_healthy
      redis:
        condition: service_started
    image: sanghoon/chat-service:1.0
    container_name: chat-service
    
      